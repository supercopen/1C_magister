&НаКлиенте
Перем ПутьКаталога, ПутьКаталогаTxt, ПутьКаталогаXml, ПутьКаталогаXlsx;


&НаКлиенте
Процедура Записать_данные(Команда)
	Если a = Истина Тогда    
		Если b = Ложь Тогда
			Если c = Ложь Тогда
				Запись_в_блокнот(); 
				Сообщить("Всё записалось!");
			Иначе
				Запись_в_блокнот();
				Открыть_Excel_файл();
				Сообщить("Всё записалось!");
			КонецЕсли; 
		Иначе
			Если c = Ложь Тогда
				Запись_в_блокнот();
				Запись_в_xml_файл(); 
				Сообщить("Всё записалось!");
			Иначе
				Запись_в_блокнот();
				Запись_в_xml_файл(); 
				Открыть_Excel_файл();
				Сообщить("Всё записалось!");
			КонецЕсли;
		КонецЕсли;
	Иначе
		 Если b = Ложь Тогда
			Если c = Ложь Тогда
				Сообщить("Нет никаких данных для сохранения!");
			Иначе
				Открыть_Excel_файл();
				Сообщить("Всё записалось!");
			КонецЕсли; 
		Иначе
			Если c = Ложь Тогда;
				Запись_в_xml_файл(); 
				Сообщить("Всё записалось!");
			Иначе
				Запись_в_xml_файл(); 
				Открыть_Excel_файл();
				Сообщить("Всё записалось!");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры





&НаКлиенте
Процедура Запись_в_блокнот()
	
	Документ = Новый ТекстовыйДокумент;
	МассивДанных = ПолучитьМассивДанных(); 
	а3 = 1;
	
	Для каждого Запись Из МассивДанных Цикл
	
		Документ.ВставитьСтроку(а3,Строка(Запись.ОсновнаяВалюта + " ---- " + Запись.Идентификатор));   
	
	
		а3 = а3 + 1;
	 	
	КонецЦикла; 
	
	Если Не ПустаяСтрока(ПутьКаталогаTxt) Тогда   
		Если Выберите_себе_имя <> "" Тогда
			Документ.ЗаписатьАсинх(ПутьКаталогаTxt + Выберите_себе_имя + ".txt"); 
		иначе
	        Предупреждение("Строка не должна содержать только пробелы.");
		КонецЕсли; 
    КонецЕсли; 

	
	Если Не ПустаяСтрока(ПутьКаталога) Тогда  
		Если Выберите_себе_имя <> "" Тогда
        	Документ.ЗаписатьАсинх(ПутьКаталога + Выберите_себе_имя + ".txt");   
		иначе
	        Предупреждение("Строка не должна содержать только пробелы.");
        КонецЕсли; 
	КонецЕсли;   
	


	
КонецПроцедуры

&НаКлиенте
Процедура Запись_в_xml_файл()
	
	МассивДанных = ПолучитьМассивДанных();       

	Если Не ПустаяСтрока(ПутьКаталогаXml) Тогда   
		Если Выберите_себе_имя <> "" Тогда
			КаталогXML = Строка(ПутьКаталогаXml + Выберите_себе_имя_2 + ".xml"); 
		иначе
	        Предупреждение("Строка не должна содержать только пробелы.");
		КонецЕсли; 
    КонецЕсли; 

	
	Если Не ПустаяСтрока(ПутьКаталога) Тогда  
		Если Выберите_себе_имя <> "" Тогда
        	КаталогXML = Строка(ПутьКаталога + Выберите_себе_имя_2 + ".xml");   
		иначе
	        Предупреждение("Строка не должна содержать только пробелы.");
        КонецЕсли; 
	КонецЕсли;   
	

	
	Файл = Новый ТекстовыйДокумент; 
	
	Файл.Записать(КаталогXML); 
	
	
	Запись = Новый ЗаписьXML;     
	
	Запись.ОткрытьФайл(КаталогXML); 
		
	Запись.ЗаписатьОбъявлениеXML(); 
	
	
	Запись.ЗаписатьНачалоЭлемента("Документы"); 
	
	
	Для каждого ЭлементМассива Из МассивДанных Цикл
	
		
		Запись.ЗаписатьНачалоЭлемента("Документ"); 
		
		
		Запись.ЗаписатьАтрибут("ОсновнаяВалюта", ЭлементМассива.ОсновнаяВалюта);  
		
		Запись.ЗаписатьНачалоЭлемента("Остальное");  
		
		Запись.ЗаписатьАтрибут("Идентификатор", ЭлементМассива.Идентификатор);  

		Запись.ЗаписатьКонецЭлемента();
		
		Запись.ЗаписатьКонецЭлемента();	
		
	
	КонецЦикла;
	
	 	
	Запись.ЗаписатьКонецЭлемента();   	
	
КонецПроцедуры

&НаКлиенте
Процедура Открыть_Excel_файл()  
	
	МассивДанных = ПолучитьМассивДанных();
		
	Эксель = Новый COMОбъект("Excel.Application");       
    Эксель.Visible = Ложь; // Сделать Excel невидимым при работе
	
		
	Если Не ПустаяСтрока(ПутьКаталогаXlsx) Тогда   
		Если Выберите_себе_имя <> "" Тогда
			Книга = Эксель.Workbooks.Add();
       		ИмяФайла = ПутьКаталогаXlsx + Выберите_себе_имя_3 + ".xlsx";
		иначе
	        Предупреждение("Строка не должна содержать только пробелы.");
		КонецЕсли; 
    КонецЕсли; 
	
	Если Не ПустаяСтрока(ПутьКаталога) Тогда  
		Если Выберите_себе_имя <> "" Тогда
        	 Книга = Эксель.Workbooks.Add();
        	ИмяФайла = ПутьКаталога + Выберите_себе_имя_3 + ".xlsx";
        иначе
	        Предупреждение("Строка не должна содержать только пробелы.");
        КонецЕсли; 
	КонецЕсли;   

	Лист = Книга.WorkSheets(1);
	Лист.Name = "Первый";
	
	Лист2 = Книга.WorkSheets.add(, Книга.WorkSheets(1));
	Лист2.Name = "Главная";
	
	ЛистДляРаботы = Эксель.WorkSheets(2);  
	ЛистДляРаботы.Columns(2).ColumnWidth = 30; 
	
	a3 = 2;
	
	Для каждого Запись Из МассивДанных Цикл
	
		ЛистДляРаботы.Cells(a3,2).Value = Строка(Запись.ОсновнаяВалюта);
		ЛистДляРаботы.Cells(a3,3).Value = Строка(Запись.Идентификатор);
		
		a3 = a3 + 1;
					
	КонецЦикла;
		
    Книга.SaveAs(ИмяФайла);
    Книга.Close(Ложь);
    Эксель.Quit();
	
КонецПроцедуры



Функция ПолучитьМассивДанных() 
	
	МассивДанных = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Валюты.НаименованиеПолное КАК ОсновнаяВалюта,
		|   ВерсииКлассификаторов.Идентификатор Как Идентификатор
		|	ИЗ
		|	Справочник.Валюты КАК Валюты,
		|   РегистрСведений.ВерсииКлассификаторов КАК ВерсииКлассификаторов";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НоваяЗапись = Новый Структура("ОсновнаяВалюта, Идентификатор"); 
		НоваяЗапись.ОсновнаяВалюта = Строка(ВыборкаДетальныеЗаписи.ОсновнаяВалюта);   
		НоваяЗапись.Идентификатор = Строка(ВыборкаДетальныеЗаписи.Идентификатор); 
		МассивДанных.Добавить(НоваяЗапись);
		
		
	КонецЦикла; 
	
	
	Возврат МассивДанных;

КонецФункции






&НаКлиенте
Процедура Открыть_метаданные(Команда)
	Если a1 = Истина Тогда
		Если b1 = Ложь Тогда
			Если c1 = Ложь Тогда
				Открытие_документов(); 
				Сообщить("Всё открылось!");
			Иначе
				Открытие_документов();
				Открытие_регистров();
				Сообщить("Всё открылось!");
			КонецЕсли; 
		Иначе
			Если c1 = Ложь Тогда
				Открытие_документов();
				Открытие_справочников(); 
				Сообщить("Всё открылось!");
			Иначе
				Открытие_документов();
				Открытие_справочников(); 
				Открытие_регистров();
				Сообщить("Всё открылось!");
			КонецЕсли;
		КонецЕсли;
	Иначе
		 Если b1 = Ложь Тогда
			Если c1 = Ложь Тогда
				Сообщить("Нет никаких данных для открытия!");
			Иначе
				Открытие_регистров();
				Сообщить("Всё открылось!");
			КонецЕсли; 
		Иначе
			Если c1 = Ложь Тогда;
				Открытие_справочников(); 
				Сообщить("Всё открылось!");
			Иначе
				Открытие_справочников(); 
				Открытие_регистров();
				Сообщить("Всё открылось!");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры 


&НаКлиенте
Процедура Открытие_документов()

	ОткрытьФорму("Документ.ВедомостьПрочихДоходовВКассу.ФормаСписка");
	Открытьформу("Документ.ГрафикОтпусков.ФормаСписка");

КонецПроцедуры


&НаКлиенте
Процедура Открытие_справочников()

	ОткрытьФорму("Справочник.Валюты.ФормаСписка");
	Открытьформу("Справочник.ВерсииФайлов.ФормаСписка");

КонецПроцедуры


 &НаКлиенте
 Процедура Открытие_регистров()
	 
	 ОткрытьФорму("РегистрСведений.АдресныеОбъекты.ФормаСписка");
	 Открытьформу("РегистрСведений.ВерсииКлассификаторов.ФормаСписка");

	 
КонецПроцедуры

&НаКлиенте
Процедура Change(Команда)

	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите путь";
	Диалог.Каталог = Истина;
	Если Диалог.Выбрать() Тогда
	    ПолныйПуть = Диалог.ПолноеИмяФайла;
	    МассивПути = СтрРазделить(ПолныйПуть, "\");
	    ПутьКаталога = "";
	    Для Каждого Сегмент Из МассивПути Цикл
	        Если Сегмент = МассивПути[МассивПути.Количество() - 1] Тогда
	            Прервать;
	        КонецЕсли;
	        Если ПутьКаталога = "" Тогда
	            ПутьКаталога = Сегмент;
	        Иначе
	            ПутьКаталога = ПутьКаталога + "\" + Сегмент;
	        КонецЕсли;
	    КонецЦикла;
	    ПутьКаталога = ПутьКаталога + "\";
		Выберите_свой_путь = ПутьКаталога;
	КонецЕсли;    
		
КонецПроцедуры

&НаКлиенте
Процедура Новый_путь_txt(Команда)
	
    ДиалогTxt = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
    ДиалогTxt.Заголовок = "Выберите путь";
    ДиалогTxt.Каталог = Истина;
    Если ДиалогTxt.Выбрать() Тогда
        ПолныйПуть = ДиалогTxt.ПолноеИмяФайла;
        МассивПути = СтрРазделить(ПолныйПуть, "\");
        ПутьКаталогаTxt = "";
        Для Каждого Сегмент Из МассивПути Цикл
            Если Сегмент = МассивПути[МассивПути.Количество() - 1] Тогда
                Прервать;
            КонецЕсли;
            Если ПутьКаталогаTxt = "" Тогда
                ПутьКаталогаTxt = Сегмент;
            Иначе
                ПутьКаталогаTxt = ПутьКаталогаTxt + "\" + Сегмент;
            КонецЕсли;
        КонецЦикла;
        ПутьКаталогаTxt = ПутьКаталогаTxt + "\";
		Сообщить(ПутьКаталогаTxt);
    КонецЕсли;  	
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура Новый_путь_xml(Команда)
	
	ДиалогXml = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
    ДиалогXml.Заголовок = "Выберите путь";
    ДиалогXml.Каталог = Истина;
    Если ДиалогXml.Выбрать() Тогда
        ПолныйПуть = ДиалогXml.ПолноеИмяФайла;
        МассивПути = СтрРазделить(ПолныйПуть, "\");
        ПутьКаталогаXml = "";
        Для Каждого Сегмент Из МассивПути Цикл
            Если Сегмент = МассивПути[МассивПути.Количество() - 1] Тогда
                Прервать;
            КонецЕсли;
            Если ПутьКаталогаXml = "" Тогда
                ПутьКаталогаXml = Сегмент;
            Иначе
                ПутьКаталогаXml = ПутьКаталогаXml + "\" + Сегмент;
            КонецЕсли;
        КонецЦикла;
        ПутьКаталогаXml = ПутьКаталогаXml + "\";
		Сообщить(ПутьКаталогаXml);
    КонецЕсли;  
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура Новый_путь_xlsx(Команда)

	ДиалогXlsx = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
    ДиалогXlsx.Заголовок = "Выберите путь";
    ДиалогXlsx.Каталог = Истина;
    Если ДиалогXlsx.Выбрать() Тогда
        ПолныйПуть = ДиалогXlsx.ПолноеИмяФайла;
        МассивПути = СтрРазделить(ПолныйПуть, "\");
        ПутьКаталогаXlsx = "";
        Для Каждого Сегмент Из МассивПути Цикл
            Если Сегмент = МассивПути[МассивПути.Количество() - 1] Тогда
                Прервать;
            КонецЕсли;
            Если ПутьКаталогаXlsx = "" Тогда
                ПутьКаталогаXlsx = Сегмент;
            Иначе
                ПутьКаталогаXlsx = ПутьКаталогаXlsx + "\" + Сегмент;
            КонецЕсли;
        КонецЦикла;
        ПутьКаталогаXlsx = ПутьКаталогаXlsx + "\";
		Сообщить(ПутьКаталогаXml);
    КонецЕсли; 
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура Новый_имя_txt(Команда)
	
 // Получаем значение из поля ввода
    ИсходнаяСтрока = Выберите_себе_имя;      
	
	// Проверяем, содержит ли строка только пробелы
    Если СтрДлина(СокрЛП(ИсходнаяСтрока)) = 0 Тогда
        Если СтрДлина(ИсходнаяСтрока) > 0 Тогда
           Предупреждение("Строка не должна содержать только пробелы.");
           Выберите_себе_имя = "";
        Иначе
            Сообщить("Введите хоть что-то!!!");
        КонецЕсли;
        Возврат;
	КонецЕсли;      
	
	// Проверка на ограничение длины строки
	Если СтрДлина(ИсходнаяСтрока) > 10 Тогда
	    Предупреждение("Строка не должна содержать более 10 символов.");
	    Выберите_себе_имя = "";
	    Возврат; 
	КонецЕсли;
	
    // Определяем наборы символов для проверки
    РусскиеБуквы = "абвгдеёжзийклмнопрстуфхцчшщъыьэюя";
    АнглийскиеБуквы = "abcdefghijklmnopqrstuvwxyz";
    ЗнакиПрепинанияЗакрытые = ".!?";
    ЗнакиПрепинанияОткрытые = ",;:";

    // Проверяем начальные и конечные условия строки
    Если Лев(ИсходнаяСтрока, 1) = " " Или Прав(ИсходнаяСтрока, 1) = " " Тогда
        Предупреждение("Строка не должна начинаться или заканчиваться пробелом.");
        Выберите_себе_имя = "";
        Возврат;     
    КонецЕсли;
	
 	// Проверяем наличие знаков препинания в начале строчки
    Если Найти(ЗнакиПрепинанияЗакрытые + ЗнакиПрепинанияОткрытые, НРег(Сред(ИсходнаяСтрока, 1, 1))) > 0 Тогда
        Предупреждение("Первый символ не должен быть знаком препинания.");
        Выберите_себе_имя = "";
        Возврат;  
    КонецЕсли;

    // Флаги для отслеживания состояния строки
    НайденаРусскаяБуква = Ложь;
    НайденаАнглийскаяБуква = Ложь;
    ПредыдущийСимволБылПробелом = Ложь;
    ЗнакПрепинанияНайден = Ложь;
    ТипЗнакаПрепинания = "";       
	ЗнакПрепинанияЗакрытыйВКонце = Ложь;
    ПослеПробелаСимвол = Ложь;     
	ЗнакПрепинанияЗакрытыйНайден = Ложь;    	

    // Перебираем каждый символ в строке
	Для i = 1 По СтрДлина(ИсходнаяСтрока) Цикл    
		
		// Приводим символ к нижнему регистру
        Символ = НРег(Сред(ИсходнаяСтрока, i, 1));

	  	// Обработка логики для открытых знаков препинания
	    Если Найти(ЗнакиПрепинанияОткрытые, Символ) > 0 Тогда
	        Если i = СтрДлина(ИсходнаяСтрока) Или (Сред(ИсходнаяСтрока, i + 1, 1) <> " ") Тогда
	            Предупреждение("После открытого знака препинания должен следовать пробел.");
	            Выберите_себе_имя = "";
	            Возврат;  
	        КонецЕсли;
	        Продолжить;
	    КонецЕсли;

	    // Обработка логики для закрытых знаков препинания
	    Если Найти(ЗнакиПрепинанияЗакрытые, Символ) > 0 Тогда
	        Если ЗнакПрепинанияЗакрытыйНайден Тогда
	            Предупреждение("После закрытого знака препинания нельзя ставить другой закрытый знак препинания, символ или пробел.");
	            Выберите_себе_имя = "";
	            Возврат; 
	        КонецЕсли;
			
		    // Обработка логики для закрытых знаков препинания
	        Если i > 1 И Сред(ИсходнаяСтрока, i - 1, 1) = " " Тогда
	            Предупреждение("Перед закрытым знаком препинания не должен быть пробел.");
	            Выберите_себе_имя = "";
	            Возврат;   
	        КонецЕсли;

	        ЗнакПрепинанияЗакрытыйНайден = Истина;
	        Продолжить;
	    Иначе
	        Если ЗнакПрепинанияЗакрытыйНайден Тогда
	            Предупреждение("После закрытого знака препинания нельзя ставить другой закрытый знак препинания, символ или пробел.");
	            Выберите_себе_имя = "";
	            Возврат;  
	        КонецЕсли;
		КонецЕсли;	    
		
        // Проверяем, принадлежит ли символ к русским или английским буквам
        Если Найти(РусскиеБуквы, Символ) > 0 Тогда
            НайденаРусскаяБуква = Истина;
        ИначеЕсли Найти(АнглийскиеБуквы, Символ) > 0 Тогда
            НайденаАнглийскаяБуква = Истина;
        КонецЕсли;

        // Проверяем на недопустимое сочетание русских и английских букв
        Если НайденаРусскаяБуква И НайденаАнглийскаяБуква Тогда
            Выберите_себе_имя = "";  
            Предупреждение("Недопустимое сочетание русских и английских букв.");
            Возврат;
        КонецЕсли;

        // Проверяем на наличие нескольких пробелов подряд
        Если Символ = " " Тогда
            Если ПредыдущийСимволБылПробелом Или (ЗнакПрепинанияНайден И ТипЗнакаПрепинания = "Закрытый") Тогда
                Выберите_себе_имя = "";
                Предупреждение("Недопустимо использование нескольких пробелов подряд или пробела после закрытого знака препинания.");
                Возврат; 
            КонецЕсли;
            ПредыдущийСимволБылПробелом = Истина;
            Если ТипЗнакаПрепинания = "Открытый" Тогда
                ПослеПробелаСимвол = Ложь;
            КонецЕсли;
        Иначе
            ПредыдущийСимволБылПробелом = Ложь;
            Если ТипЗнакаПрепинания = "Открытый" Тогда
                ПослеПробелаСимвол = Истина;
            КонецЕсли;
        КонецЕсли;

        // Проверяем на наличие недопустимых символов
        Если (Найти(РусскиеБуквы, Символ) = 0) И (Найти(АнглийскиеБуквы, Символ) = 0) И (Символ <> " ") Тогда
            Если Не ЗнакПрепинанияНайден Тогда
                Выберите_себе_имя = "";
                Предупреждение("Недопустимый символ.");
                Возврат;       
            КонецЕсли;
        КонецЕсли;
	КонецЦикла;	
	
	Сообщить("Ваше имя может быть изменено!");
	
КонецПроцедуры

&НаКлиенте
Процедура Новый_имя_xml(Команда)
	// Получаем значение из поля ввода
    ИсходнаяСтрока = Выберите_себе_имя;      
	
	// Проверяем, содержит ли строка только пробелы
    Если СтрДлина(СокрЛП(ИсходнаяСтрока)) = 0 Тогда
        Если СтрДлина(ИсходнаяСтрока) > 0 Тогда
           Предупреждение("Строка не должна содержать только пробелы.");
           Выберите_себе_имя = "";
        Иначе
            Сообщить("Введите хоть что-то!!!");
        КонецЕсли;
        Возврат;
	КонецЕсли;      
	
	// Проверка на ограничение длины строки
	Если СтрДлина(ИсходнаяСтрока) > 10 Тогда
	    Предупреждение("Строка не должна содержать более 10 символов.");
	    Выберите_себе_имя = "";
	    Возврат; 
	КонецЕсли;
	
    // Определяем наборы символов для проверки
    РусскиеБуквы = "абвгдеёжзийклмнопрстуфхцчшщъыьэюя";
    АнглийскиеБуквы = "abcdefghijklmnopqrstuvwxyz";
    ЗнакиПрепинанияЗакрытые = ".!?";
    ЗнакиПрепинанияОткрытые = ",;:";

    // Проверяем начальные и конечные условия строки
    Если Лев(ИсходнаяСтрока, 1) = " " Или Прав(ИсходнаяСтрока, 1) = " " Тогда
        Предупреждение("Строка не должна начинаться или заканчиваться пробелом.");
        Выберите_себе_имя = "";
        Возврат;     
    КонецЕсли;
	
 	// Проверяем наличие знаков препинания в начале строчки
    Если Найти(ЗнакиПрепинанияЗакрытые + ЗнакиПрепинанияОткрытые, НРег(Сред(ИсходнаяСтрока, 1, 1))) > 0 Тогда
        Предупреждение("Первый символ не должен быть знаком препинания.");
        Выберите_себе_имя = "";
        Возврат;  
    КонецЕсли;

    // Флаги для отслеживания состояния строки
    НайденаРусскаяБуква = Ложь;
    НайденаАнглийскаяБуква = Ложь;
    ПредыдущийСимволБылПробелом = Ложь;
    ЗнакПрепинанияНайден = Ложь;
    ТипЗнакаПрепинания = "";       
	ЗнакПрепинанияЗакрытыйВКонце = Ложь;
    ПослеПробелаСимвол = Ложь;     
	ЗнакПрепинанияЗакрытыйНайден = Ложь;    	

    // Перебираем каждый символ в строке
	Для i = 1 По СтрДлина(ИсходнаяСтрока) Цикл    
		
		// Приводим символ к нижнему регистру
        Символ = НРег(Сред(ИсходнаяСтрока, i, 1));

	  	// Обработка логики для открытых знаков препинания
	    Если Найти(ЗнакиПрепинанияОткрытые, Символ) > 0 Тогда
	        Если i = СтрДлина(ИсходнаяСтрока) Или (Сред(ИсходнаяСтрока, i + 1, 1) <> " ") Тогда
	            Предупреждение("После открытого знака препинания должен следовать пробел.");
	            Выберите_себе_имя = "";
	            Возврат;  
	        КонецЕсли;
	        Продолжить;
	    КонецЕсли;

	    // Обработка логики для закрытых знаков препинания
	    Если Найти(ЗнакиПрепинанияЗакрытые, Символ) > 0 Тогда
	        Если ЗнакПрепинанияЗакрытыйНайден Тогда
	            Предупреждение("После закрытого знака препинания нельзя ставить другой закрытый знак препинания, символ или пробел.");
	            Выберите_себе_имя = "";
	            Возврат; 
	        КонецЕсли;
			
		    // Обработка логики для закрытых знаков препинания
	        Если i > 1 И Сред(ИсходнаяСтрока, i - 1, 1) = " " Тогда
	            Предупреждение("Перед закрытым знаком препинания не должен быть пробел.");
	            Выберите_себе_имя = "";
	            Возврат;   
	        КонецЕсли;

	        ЗнакПрепинанияЗакрытыйНайден = Истина;
	        Продолжить;
	    Иначе
	        Если ЗнакПрепинанияЗакрытыйНайден Тогда
	            Предупреждение("После закрытого знака препинания нельзя ставить другой закрытый знак препинания, символ или пробел.");
	            Выберите_себе_имя = "";
	            Возврат;  
	        КонецЕсли;
		КонецЕсли;	    
		
        // Проверяем, принадлежит ли символ к русским или английским буквам
        Если Найти(РусскиеБуквы, Символ) > 0 Тогда
            НайденаРусскаяБуква = Истина;
        ИначеЕсли Найти(АнглийскиеБуквы, Символ) > 0 Тогда
            НайденаАнглийскаяБуква = Истина;
        КонецЕсли;

        // Проверяем на недопустимое сочетание русских и английских букв
        Если НайденаРусскаяБуква И НайденаАнглийскаяБуква Тогда
            Выберите_себе_имя = "";  
            Предупреждение("Недопустимое сочетание русских и английских букв.");
            Возврат;
        КонецЕсли;

        // Проверяем на наличие нескольких пробелов подряд
        Если Символ = " " Тогда
            Если ПредыдущийСимволБылПробелом Или (ЗнакПрепинанияНайден И ТипЗнакаПрепинания = "Закрытый") Тогда
                Выберите_себе_имя = "";
                Предупреждение("Недопустимо использование нескольких пробелов подряд или пробела после закрытого знака препинания.");
                Возврат; 
            КонецЕсли;
            ПредыдущийСимволБылПробелом = Истина;
            Если ТипЗнакаПрепинания = "Открытый" Тогда
                ПослеПробелаСимвол = Ложь;
            КонецЕсли;
        Иначе
            ПредыдущийСимволБылПробелом = Ложь;
            Если ТипЗнакаПрепинания = "Открытый" Тогда
                ПослеПробелаСимвол = Истина;
            КонецЕсли;
        КонецЕсли;

        // Проверяем на наличие недопустимых символов
        Если (Найти(РусскиеБуквы, Символ) = 0) И (Найти(АнглийскиеБуквы, Символ) = 0) И (Символ <> " ") Тогда
            Если Не ЗнакПрепинанияНайден Тогда
                Выберите_себе_имя = "";
                Предупреждение("Недопустимый символ.");
                Возврат;       
            КонецЕсли;
        КонецЕсли;
	КонецЦикла;	
	
	Сообщить("Ваше имя может быть изменено!");

КонецПроцедуры

&НаКлиенте
Процедура Новый_имя_xlsx(Команда)
	// Получаем значение из поля ввода
    ИсходнаяСтрока = Выберите_себе_имя;      
	
	// Проверяем, содержит ли строка только пробелы
    Если СтрДлина(СокрЛП(ИсходнаяСтрока)) = 0 Тогда
        Если СтрДлина(ИсходнаяСтрока) > 0 Тогда
           Предупреждение("Строка не должна содержать только пробелы.");
           Выберите_себе_имя = "";
        Иначе
            Сообщить("Введите хоть что-то!!!");
        КонецЕсли;
        Возврат;
	КонецЕсли;      
	
	// Проверка на ограничение длины строки
	Если СтрДлина(ИсходнаяСтрока) > 10 Тогда
	    Предупреждение("Строка не должна содержать более 10 символов.");
	    Выберите_себе_имя = "";
	    Возврат; 
	КонецЕсли;
	
    // Определяем наборы символов для проверки
    РусскиеБуквы = "абвгдеёжзийклмнопрстуфхцчшщъыьэюя";
    АнглийскиеБуквы = "abcdefghijklmnopqrstuvwxyz";
    ЗнакиПрепинанияЗакрытые = ".!?";
    ЗнакиПрепинанияОткрытые = ",;:";

    // Проверяем начальные и конечные условия строки
    Если Лев(ИсходнаяСтрока, 1) = " " Или Прав(ИсходнаяСтрока, 1) = " " Тогда
        Предупреждение("Строка не должна начинаться или заканчиваться пробелом.");
        Выберите_себе_имя = "";
        Возврат;     
    КонецЕсли;
	
 	// Проверяем наличие знаков препинания в начале строчки
    Если Найти(ЗнакиПрепинанияЗакрытые + ЗнакиПрепинанияОткрытые, НРег(Сред(ИсходнаяСтрока, 1, 1))) > 0 Тогда
        Предупреждение("Первый символ не должен быть знаком препинания.");
        Выберите_себе_имя = "";
        Возврат;  
    КонецЕсли;

    // Флаги для отслеживания состояния строки
    НайденаРусскаяБуква = Ложь;
    НайденаАнглийскаяБуква = Ложь;
    ПредыдущийСимволБылПробелом = Ложь;
    ЗнакПрепинанияНайден = Ложь;
    ТипЗнакаПрепинания = "";       
	ЗнакПрепинанияЗакрытыйВКонце = Ложь;
    ПослеПробелаСимвол = Ложь;     
	ЗнакПрепинанияЗакрытыйНайден = Ложь;    	

    // Перебираем каждый символ в строке
	Для i = 1 По СтрДлина(ИсходнаяСтрока) Цикл    
		
		// Приводим символ к нижнему регистру
        Символ = НРег(Сред(ИсходнаяСтрока, i, 1));

	  	// Обработка логики для открытых знаков препинания
	    Если Найти(ЗнакиПрепинанияОткрытые, Символ) > 0 Тогда
	        Если i = СтрДлина(ИсходнаяСтрока) Или (Сред(ИсходнаяСтрока, i + 1, 1) <> " ") Тогда
	            Предупреждение("После открытого знака препинания должен следовать пробел.");
	            Выберите_себе_имя = "";
	            Возврат;  
	        КонецЕсли;
	        Продолжить;
	    КонецЕсли;

	    // Обработка логики для закрытых знаков препинания
	    Если Найти(ЗнакиПрепинанияЗакрытые, Символ) > 0 Тогда
	        Если ЗнакПрепинанияЗакрытыйНайден Тогда
	            Предупреждение("После закрытого знака препинания нельзя ставить другой закрытый знак препинания, символ или пробел.");
	            Выберите_себе_имя = "";
	            Возврат; 
	        КонецЕсли;
			
		    // Обработка логики для закрытых знаков препинания
	        Если i > 1 И Сред(ИсходнаяСтрока, i - 1, 1) = " " Тогда
	            Предупреждение("Перед закрытым знаком препинания не должен быть пробел.");
	            Выберите_себе_имя = "";
	            Возврат;   
	        КонецЕсли;

	        ЗнакПрепинанияЗакрытыйНайден = Истина;
	        Продолжить;
	    Иначе
	        Если ЗнакПрепинанияЗакрытыйНайден Тогда
	            Предупреждение("После закрытого знака препинания нельзя ставить другой закрытый знак препинания, символ или пробел.");
	            Выберите_себе_имя = "";
	            Возврат;  
	        КонецЕсли;
		КонецЕсли;	    
		
        // Проверяем, принадлежит ли символ к русским или английским буквам
        Если Найти(РусскиеБуквы, Символ) > 0 Тогда
            НайденаРусскаяБуква = Истина;
        ИначеЕсли Найти(АнглийскиеБуквы, Символ) > 0 Тогда
            НайденаАнглийскаяБуква = Истина;
        КонецЕсли;

        // Проверяем на недопустимое сочетание русских и английских букв
        Если НайденаРусскаяБуква И НайденаАнглийскаяБуква Тогда
            Выберите_себе_имя = "";  
            Предупреждение("Недопустимое сочетание русских и английских букв.");
            Возврат;
        КонецЕсли;

        // Проверяем на наличие нескольких пробелов подряд
        Если Символ = " " Тогда
            Если ПредыдущийСимволБылПробелом Или (ЗнакПрепинанияНайден И ТипЗнакаПрепинания = "Закрытый") Тогда
                Выберите_себе_имя = "";
                Предупреждение("Недопустимо использование нескольких пробелов подряд или пробела после закрытого знака препинания.");
                Возврат; 
            КонецЕсли;
            ПредыдущийСимволБылПробелом = Истина;
            Если ТипЗнакаПрепинания = "Открытый" Тогда
                ПослеПробелаСимвол = Ложь;
            КонецЕсли;
        Иначе
            ПредыдущийСимволБылПробелом = Ложь;
            Если ТипЗнакаПрепинания = "Открытый" Тогда
                ПослеПробелаСимвол = Истина;
            КонецЕсли;
        КонецЕсли;

        // Проверяем на наличие недопустимых символов
        Если (Найти(РусскиеБуквы, Символ) = 0) И (Найти(АнглийскиеБуквы, Символ) = 0) И (Символ <> " ") Тогда
            Если Не ЗнакПрепинанияНайден Тогда
                Выберите_себе_имя = "";
                Предупреждение("Недопустимый символ.");
                Возврат;       
            КонецЕсли;
        КонецЕсли;
	КонецЦикла;	
	
	Сообщить("Ваше имя может быть изменено!");

КонецПроцедуры





